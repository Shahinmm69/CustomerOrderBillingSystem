// <auto-generated />
using System;
using Cobs.Infrustructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cobs.Infrustructure.Migrations
{
    [DbContext(typeof(CobsDbContext))]
    [Migration("20250918094148_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("base")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cobs.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("WalletId")
                        .IsUnique();

                    b.ToTable("Customers", "base");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ali@example.com",
                            FirstName = "Ali",
                            LastName = "Rezaei",
                            Role = 1,
                            WalletId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "sara@example.com",
                            FirstName = "Sara",
                            LastName = "Ahmadi",
                            Role = 2,
                            WalletId = 2
                        });
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Invoices", "base");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1200.75m,
                            DueDate = new DateTime(2025, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1500.00m,
                            DueDate = new DateTime(2025, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", "base");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Product = "Laptop",
                            Quantity = 1,
                            TotalAmount = 1200.75m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Product = "Phone",
                            Quantity = 2,
                            TotalAmount = 1500.00m
                        });
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("TransactionAmount")
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("WalletBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValue(0m);

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions", "base");
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("WalletBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.ToTable("Wallets", "base");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            WalletBalance = 100m
                        },
                        new
                        {
                            Id = 2,
                            WalletBalance = 200m
                        });
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Customer", b =>
                {
                    b.HasOne("Cobs.Domain.Entities.Wallet", "Wallet")
                        .WithOne("Customer")
                        .HasForeignKey("Cobs.Domain.Entities.Customer", "WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("Cobs.Domain.Entities.Order", "Order")
                        .WithOne("Invoice")
                        .HasForeignKey("Cobs.Domain.Entities.Invoice", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Order", b =>
                {
                    b.HasOne("Cobs.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Cobs.Domain.Entities.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Order", b =>
                {
                    b.Navigation("Invoice")
                        .IsRequired();
                });

            modelBuilder.Entity("Cobs.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
